// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © algoat

//@version=5
indicator("Sticky Notes, Checklist, To-do, Journal [algoat]", "Sticky Notes [algoat]", true)


type Block
    bool   is_on      = na
    string title      = na
    bool   is_done    = na
    string comment    = na
    bool   is_date    = na
    int    date       = na


i_name   = input('Notes' , 'Name'    , display = display.none)
i_check1 = input('✅'   , 'Checkbox', display = display.none, inline = 'check')
i_check0 = input('⬜'   , ''        , display = display.none, inline = 'check')
i_size   = input.string(size.normal       , 'Size'    , display = display.none, options = [size.tiny, size.small, size.normal, size.large, size.huge])
i_pos    = input.string(position.top_right, 'Position', display = display.none, options = [position.top_left   , position.top_center   , position.top_right, 
                                                                                           position.middle_left, position.middle_center, position.middle_right, 
                                                                                           position.bottom_left, position.bottom_center, position.bottom_right])

colors = map.new<string,color>()
colors.put('title'  , input.color(#ffffffd7, 'Colors', '', 'clr'))
colors.put('content', input.color(#ffffff80, ''      , '', 'clr'))
colors.put('bg'     , input.color(#ffffff00, ''      , '', 'clr'))
colors.put('green'  , input.color(#4caf50  , ''      , '', 'clr'))
colors.put('due'    , input.color(#ff5252  , ''      , '', 'clr'))

g1 = 'Note 1', g2 = 'Note 2', g3 = 'Note 3', g4 = 'Note 4', g5 = 'Note 5', g6 = 'Note 6'
var notes = array.from(
 Block.new(
 input.bool(true, "", inline = '1-1', group = g1, display = display.none),
 input.string('1st Note', "", inline = '1-1', group = g1, display = display.none),
 input.bool(true, "Checkbox", inline = '1-1', group = g1, display = display.none),
 input.text_area("This is my first note,\nand it's already a masterpiece!\n\nMultiple lines? No problem.\n\nTask completed? Check!\n\nFeeling accomplished? Absolutely.", '', group = g1, display = display.none),
 input.bool(false, '', inline = '1-3', group = g1, display = display.none),
 input.time(timestamp("31 Dec 2024 00:00"), "Due", inline = '1-3', group = g1, display = display.none)
 ),

 Block.new(
 input.bool(true, "", inline = '1-1', group = g2, display = display.none),
 input.string('2nd Task', "", inline = '1-1', group = g2, display = display.none),
 input.bool(false, "Checkbox", inline = '1-1', group = g2, display = display.none),
 input.text_area("This is my second note\nand it's a serious task.\nGot a due date and everything.\n\nBut hey, plenty of time left...\nso maybe tomorrow?\n\nProcrastinators unite!", '', group = g2, display = display.none),
 input.bool(true, '', inline = '1-3', group = g2, display = display.none),
 input.time(timestamp("31 Dec 2028 00:00"), "Due", inline = '1-3', group = g2, display = display.none)
 ),

 Block.new(
 input.bool(true, "", inline = '1-1', group = g3, display = display.none),
 input.string('Forgot something', "", inline = '1-1', group = g3, display = display.none),
 input.bool(false, "Checkbox", inline = '1-1', group = g3, display = display.none),
 input.text_area("I forgot something... again.\nIt was definitely crucial. Or was it?\nGuess we'll never know!", '', group = g3, display = display.none),
 input.bool(true, '', inline = '1-3', group = g3, display = display.none),
 input.time(timestamp("31 Jan 2024 00:00"), "Due", inline = '1-3', group = g3, display = display.none)
 ),

 Block.new(
 input.bool(false, "", inline = '1-1', group = g4, display = display.none),
 input.string('4th Note', "", inline = '1-1', group = g4, display = display.none),
 input.bool(false, "Checkbox", inline = '1-1', group = g4, display = display.none),
 input.text_area('', '', group = g4, display = display.none),
 input.bool(false, '', inline = '1-3', group = g4, display = display.none),
 input.time(timestamp("31 Dec 2024 00:00"), "Due", inline = '1-3', group = g4, display = display.none)
 ),

 Block.new(
 input.bool(true, "", inline = '1-1', group = g5, display = display.none),
 input.string('5th Note', "", inline = '1-1', group = g5, display = display.none),
 input.bool(false, "Checkbox", inline = '1-1', group = g5, display = display.none),
 input.text_area('Skipped the 4th note because I can!\nLiving on the edge, one note at a time.', '', group = g5, display = display.none),
 input.bool(false, '', inline = '1-3', group = g5, display = display.none),
 input.time(timestamp("31 Dec 2024 00:00"), "Due", inline = '1-3', group = g5, display = display.none)
 ),

 Block.new(
 input.bool(true, "", inline = '1-1', group = g6, display = display.none),
 input.string("Let's meeek money!", "", inline = '1-1', group = g6, display = display.none),
 input.bool(true, "Checkbox", inline = '1-1', group = g6, display = display.none),
 input.text_area('Done already?\nWow, I must be a trading wizard.\n\nTime to reward myself...\nwith a coffee break!', '', group = g6, display = display.none),
 input.bool(false, '', inline = '1-3', group = g6, display = display.none),
 input.time(timestamp("31 Dec 2024 00:00"), "Due", inline = '1-3', group = g6, display = display.none)
 )
 )


size_title = switch i_size
    size.tiny   => size.small
    size.small  => size.normal
    size.normal => size.large
    size.large  => size.huge
    =>             i_size

clr_chart = color.new(chart.fg_color, 85)
var t = table.new(i_pos, 3, 25, colors.get('bg'), clr_chart, 1)

if barstate.islast
    row = 0

    t.cell(0, row, i_name, text_size = size_title, text_color = colors.get('title'))
    t.merge_cells(0,row,2,row)

    row += 1

    t.cell(0, row, '', height = 0.1, bgcolor = clr_chart, text_size = i_size)
    t.merge_cells(0,row,2,row)

    row += 1

    for note in notes

        if not note.is_on
            continue

        t.cell(0, row, note.is_done ? i_check1 : i_check0, text_color = colors.get(note.is_done ? 'green' : 'due'), text_size = i_size)
        t.cell(1, row, note.title, text_color = colors.get('title'), text_size = size_title, text_halign = text.align_left)
        t.merge_cells(1,row,2,row)

        row += 1

        if note.is_date

            is_due  = timenow >= note.date and not note.is_done
            clr     = colors.get(is_due ? 'due' : note.is_done ? 'green' : 'content')
            txt_due = is_due ? 'Overdue!' : note.is_done ? '' : str.format('{0} days left', math.floor((note.date - timenow) / 8.64e7))

            t.cell(1, row, str.format_time(note.date, 'yyyy-MM-dd'), text_color = clr, text_size = i_size, text_halign = text.align_left)
            t.cell(2, row, txt_due, text_color = clr, text_size = i_size, text_halign = text.align_center)

            row += 1

        t.cell(0, row, note.comment, text_color = colors.get('content'), text_size = i_size, text_halign = text.align_left)
        t.merge_cells(0,row,2,row)

        row += 1

        t.cell(0, row, '', height = 0.1, bgcolor = clr_chart, text_size = i_size)
        t.merge_cells(0,row,2,row)

        row += 1